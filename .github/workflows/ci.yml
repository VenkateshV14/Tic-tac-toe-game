name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: ${{ github.sha }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push bot-service
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/bot-img:${IMAGE_TAG} ./backend/bot-service/
        docker push ${{ secrets.DOCKER_USERNAME }}/bot-img:${IMAGE_TAG}

    - name: Build and push language-service
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/lang-img:${IMAGE_TAG} ./backend/lang-service
        docker push ${{ secrets.DOCKER_USERNAME }}/lang-img:${IMAGE_TAG}

    - name: Build and push winner-service
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/database-img:${IMAGE_TAG} ./database
        docker push ${{ secrets.DOCKER_USERNAME }}/database-img:${IMAGE_TAG}

    - name: Build and push frontend
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend-img:${IMAGE_TAG} ./frontend
        docker push ${{ secrets.DOCKER_USERNAME }}/frontend-img:${IMAGE_TAG}

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Download SonarScanner
      run: |
        wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
        unzip sonar-scanner-cli-5.0.1.3006-linux.zip
        mv sonar-scanner-5.0.1.3006-linux sonar-scanner

    - name: Run SonarQube scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        ./sonar-scanner/bin/sonar-scanner

    - name: Trigger Jenkins CD
      env:
        JENKINS_USER: ${{ secrets.JENKINS_USER }}
        JENKINS_TOKEN: ${{ secrets.JENKINS_TOKEN }}
        JENKINS_URL: ${{ secrets.JENKINS_URL }}
        JENKINS_JOB: ${{ secrets.JENKINS_JOB }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        curl -X POST "http://${JENKINS_USER}:${JENKINS_TOKEN}@${JENKINS_URL}/job/${JENKINS_JOB}/buildWithParameters?IMAGE_TAG=${IMAGE_TAG}"
